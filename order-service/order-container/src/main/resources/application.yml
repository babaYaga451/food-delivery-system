server:
  port: 8181

logging:
  level:
    com.food.ordering.system: INFO

order-service:
  payment-request-topic-name: payment-request
  payment-response-topic-name: payment-response
  restaurant-approval-request-topic-name: restaurant-approval-request
  restaurant-approval-response-topic-name: restaurant-approval-response
  customer-topic-name: customer

spring:
  jpa:
    open-in-view: false
    show-sql: true
  datasource:
    username: ${USERNAME}
    password: ${PASSWORD}
    driver-class-name: org.postgresql.Driver
  sql:
    init:
      platform: postgres
      mode: always
      schema-locations: classpath:init-schema.sql
  data:
    mongodb:
      uri: ${SPRING_MONGO_URI}
      database: food-ordering

kafka-config:
  bootstrap-servers: ${BOOT_STRAP_SERVERS}
  schema-registry-url-key: schema.registry.url
  schema-registry-url: ${SCHEMA_REGISTRY_URL}
  num-of-partitions: 3
  replication-factor: 3
  property-sasl-mechanism: sasl.mechanism
  sasl-mechanism: PLAIN
  property-sasl-jaas-config: sasl.jaas.config
  sasl-jaas-config: org.apache.kafka.common.security.plain.PlainLoginModule required username=${KEY} password=${SECRET};
  property-security-protocol: security.protocol
  security-protocol: SASL_SSL
  property-basic-auth-credentials-source: basic.auth.credentials.source
  basic-auth-credentials-source: USER_INFO
  property-schema-registry-basic-auth-user-info: schema.registry.basic.auth.user.info
  schema-registry-basic-auth-user-info: ${SCHEMA_KEY}:${SCHEMA_SECRET}


kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.StringSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  compression-type: none
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5

kafka-consumer-config:
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
  payment-consumer-group-id: payment-topic-consumer
  restaurant-approval-consumer-group-id: restaurant-approval-topic-consumer
  customer-group-id: customer-topic-consumer
  auto-offset-reset: earliest
  specific-avro-reader-key: specific.avro.reader
  specific-avro-reader: true
  batch-listener: true
  auto-startup: true
  concurrency-level: 3
  session-timeout-ms: 10000
  heartbeat-interval-ms: 3000
  max-poll-interval-ms: 300000
  max-poll-records: 500
  max-partition-fetch-bytes-default: 1048576
  max-partition-fetch-bytes-boost-factor: 1
  poll-timeout-ms: 150